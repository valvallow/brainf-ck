#!/usr/local/bin/gosh

;;;
;;; bfi - brainf*ck interpreter
;;;

(use file.util) ; file->string
(use gauche.parseopt)

(define (usage)
  (print "Usage: bfi [options ...] [file]")
  (exit 1))

(define (interpret code ptr mem)
  (print code)
  (values ptr mem))

(define (parse str)
  (let ((ls (string->list str)))
    ls))

(define (repl mem)
  (print ";; brainf*ck interactive shell")
  (print ";; q to exit.")
  (let rec ((ptr 0)(mem mem))
    (display "bfi> ")
    (flush)
    (let1 input (read-line)
      (when (equal? input "q")
        (exit 0))
      (receive (ptr mem)
          (interpret (parse (x->string input)) ptr mem)
        (rec ptr mem)))))

(define (run-bf str mem)
  (interpret (parse str) 0 mem))

(define (main args)
  (let-args (cdr args)
      ((memory-size "m|memory-size=i" 3000)
       (help "h|help" => usage)
       (else (opt . _)
             (print "Unknown option : " opt)
             (usage))
       . rest)
    (let ((mem (make-vector memory-size 0)))
      (if (null? rest)
          (repl mem)
          (run-bf (file->string (car rest)) mem)))))
